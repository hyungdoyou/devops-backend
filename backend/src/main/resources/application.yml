spring:
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${CLIENT_ID}
            scope:
              - profile_nickname
              - profile_image
            authorization-grant-type: authorization_code
            redirect-uri:  http://localhost:8080/login/oauth2/code/kakao
            client-name: Kakao
            client-authentication-method: POST
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_SENDER}
    password: ${APP_PASSWORD}
    properties:
      mail:
        smtp:
          starttls:
            enable: true
            required: true
          auth: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000

  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: ${MASTER_URL}
    username: ${MASTER}
    password: ${MASTER_PW}

    slaves:
      slave1:
        name: slave1
        driver-class-name: org.mariadb.jdbc.Driver
        url: ${SLAVE_URL}
        username: ${SLAVE}
        password: ${SLAVE_PW}

  jpa:
    database-platform: org.hibernate.dialect.MariaDB103Dialect
    hibernate:
      ddl-auto: update
      naming:
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        default_batch_fetch_size: 1000
        format_sql: true
    show-sql: true

  servlet:
    multipart:
      max-file-size: 20MB
      max-request-size: 20MB

logging:
  level:
    org.springframework.security: DEBUG

jwt:
  secret-key: ${JWT_SECRET_KEY}
  token:
    expired-time-ms: ${EXPIRED_TIME}

cloud:
  aws:
    s3:
      board-bucket: ${BOARD_BUCKET}
      review-bucket: ${REVIEW_BUCKET}
      profile-bucket: ${PROFILE_BUCKET}
    credentials:
      access-key: ${AWS_S3_ACCESS_KEY}
      secret-key: ${AWS_S3_SECRET_KEY}
    region:
      static: ${REGION}
      auto: false
    stack:
      auto: false

naver:
  api-key: ${NAVER_API_KEY}